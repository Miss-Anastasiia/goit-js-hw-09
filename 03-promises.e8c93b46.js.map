{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAwB/B,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAYF,EAAEG,cAAcZ,MAAMa,cACtC,MAAMC,EAAYL,EAAEG,cAAcG,KAAKF,cACjCG,EAAkBP,EAAEG,cAAcK,OAAOJ,cAG/C,IAAK,IAAIK,EAAW,EAAGA,GAAYF,EAAiBE,GAAY,EAC9DpB,EAAcoB,EAAUP,GAAWQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACnDoB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IACvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MACpBoB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,IAEvEW,GAAaG,EAEfpB,EAAKC,KAAK8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  let mainDelay = e.currentTarget.delay.valueAsNumber;\n  const delayStep = e.currentTarget.step.valueAsNumber;\n  const amountOfPromise = e.currentTarget.amount.valueAsNumber;\n  \n\n  for (let position = 1; position <= amountOfPromise; position += 1) {\n    createPromise(position, mainDelay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });;\n    mainDelay += delayStep;\n  };\n  refs.form.reset()\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","mainDelay","currentTarget","valueAsNumber","delayStep","step","amountOfPromise","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e8c93b46.js.map"}